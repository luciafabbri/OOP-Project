27/03/2020
-Renamed interface "TestInterfaceLevel" to "Level";
-Implementation of "Graphics" ("GraphicsImpl") now takes a "Level" argument, not Room (previously did this only to test);
-Removed function "New Resolution" from Room1 class;
-Complete re-work of how "Room" handles tiles and their coords;
-Added packages items, levels, tiles and genTest to distinguish classes inside project;
-Implemented interface "GameSettings" containing width, height and tilesize of objects;
-Created class "Floor1" containing texture and point of origin and end of drawing;
-Created class "walls1", same as "floor1", containing all of 4 walls;
-Renamed class and interface "Graphics" to "Rendering" because of name issues;
-Revamped "RenderingImpl" class;
-Revamped "Tile" class to have different types of implementation, each with their own characteristics;
-Same with "Items" class;

28/03/2020
-Implemented object Key;
-Added comments in classes RenderingImpl;
-Implemented inside "TestState" some tests for sprite movement for later real implementation (very basic movement in four cardinal directions);

31/03/2020 - 01/04/2020
-Change the static variables inside "GameSettings", so to have more flexibility when implementing sprites;

04/04/2020
-Renamed class "Level1" to "LevelImpl" and "Room1" to "RoomImpl" to accomodate new implementation regarding the random generating levels;
-Added a List of obstacles for future implementation inside RoomImpl;
-Added a List of Doors to implement dinamically based on number of rooms connected to the current one;

10/04/2020
-Implemented class Menu to act as a game menu once you start up the game, now mainly contains two buttons, one to start the game and one to close the application;
-Implemented levelID inside TestPlay to dinamically load level based on ID and algorithm given;
-Eliminated a copy of both GameSettings and Pair since they already exits, and updated dependecies;
-Added function to List of obstacles to be treated same with items;

11/04/2020 - 1
-Fixed some minor issues regarding the drawing of items (Keys more specifically);
-Implemented system to store all rooms that are created using the function generateLevel inside LeveelDesignGeneratorImpl;
-Implemented temporary system to switch between generated rooms to see if changes are applied;

11/04/2020 - 2
-Reimplemented the way the user can change rooms, because algorithm that generates rooms has changed;

14/04/2020
-Integrated and Implemented function inside RenderingImpl to draw obstacles temporarly for testing, more permanent solution will be implemented
once testing for entities has been done extensively;

15/04/2020
-Implemented maximum FPS recheable so performance should be the same regardless of system hardware;
-Implemented Player inside TestPlay, Logic and Rendering to perform test regarding the interaction of the mainChar with the world;
-Implemented inside Player a way to stop main character when walking in obstacles;
-Doors are now usable to traverse rooms;

19/04/2020
-Changed implementation of Items and Modifiers to use pickupables instead of entities;

20/04/2020
-Implemented temporary inventory and stats GUI to check if player and the world are behaving properly;
-Implemented transitioning to the next level via use of stairs;
-Made minor fixed inside other classes (like implementing a get for Inventory inside PlayerImpl);

21/04/2020
-Implemented a simple UI to show the health and inventory of the player;

25/04/2020
-Implemented images the projectiles of both the MainChar and Enemies;
-Implemented a set of Bullets inside PlayerImpl so we can keep track of the bullets;
-Also implemented inside Rendering drawMainProj to draw the MainChar projectiles, and rotateMainProj to rotate bullets according to direction;
-And implemented inside Logic shootMain and moveMainProj to, respectively, check if the spacebar has been pressed, and to move each individual bullet;
-Implemented getRoom inside Bulletimpl;

26/04/2020
-Implemented a Sound for firing the bow;
-Fixed an issue where entities would spawn inside the wall;
-Now arrows destroy themselves when they make contact with an entity;
-Implemented inside rendering and logic, rendering of enemies and simple logic regarding updating their positions;
-Added animations for enemy Plant;
-Added a sound effect for the player walking;
-Added a get method inside stateTest for the player;

28/04/2020
-Implemented the remove of enemies upon killing them (when their health reaches <= 0);
-Implemented class for animated tiles (for opening and closing doors and trapdoors), more specifically from DoorEast to DoorSouth;
-Added a couple of classes representing the top of the door;
-Added animated doors and check to make doors unpassable if they're closed;
-Cleaned up class RenderingImpl, changing the implementation of a few functions;
-Same as above with the class LogicImpl;
-Added a new AttackSpeed modifier, increases rate of fire;
-Added a sound effect for picking up keys and coins;
-Also added a sound effect when the doors open;

30/04/2020
-Added tiles in front of doors inside RoomBFS;
-Implemented sound for opening doors;
-Added a modifier to increase movement speed;
-Added sound for taking damage and for picking up modifiers;

03/05/2020
-Implemented iterface for LogicImpl class;
-Commented all class regarding Pirazzoli's work until now (packages coordination, gameEntities.items, gameEntities.modifiers, levels, tiles);

04/05/2020
-Implemented new item RecoverHealth, to let the Player recover health;

05/05/2020
-ReImplemented the way keys work, once one is picked up, all doors open;
-Coins are now collectibles;
-Added a message when collecting coins now;

08/05/2020
-Implemented a full functional health bar;
-Changed the icons for AttackDamage and AttackSpeed;
-Implemented a sound when you hit an enemy;
-Fixed an issues with passing through obstacles;